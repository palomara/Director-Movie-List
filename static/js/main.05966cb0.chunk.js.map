{"version":3,"sources":["shared/assets/svg/check-square-solid.svg","shared/assets/svg/question-square-solid.svg","api.js","store/actions/director.js","store/actions/actionTypes.js","components/DirectorForm.js","components/Movie.js","shared/components/icons/Chevron.js","shared/components/Accordion.js","components/Director.js","components/RandomMovie.js","components/App.js","serviceWorker.js","store/reducers/director.js","store/reducers/theme.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","getImageUrl","url","movieTitle","size","get","a","fetch","includes","process","then","res","json","getCredits","personId","getPerson","name","getDirector","people","total_results","Error","person","results","id","credits","directedMovies","crew","filter","movie","job","directedMoviesWithUrls","map","poster_path","original_title","backdrop_path","seen","length","movies","directorAdd","director","type","payload","directorError","error","Form","styled","form","StyledInputField","InputField","StyledButton","Button","H2","h2","connect","state","directors","dispatch","addDirector","api","catch","err","console","log","message","directorActions","loading","useState","input","setInput","onSubmit","event","preventDefault","disabled","required","dense","label","value","onChange","e","target","Help","large","MovieContainer","div","PosterImg","img","PosterImgWrapper","question","check","Title","span","toggleSeenMovie","className","onClick","src","Chevron","fill","height","width","xmlns","aria-hidden","focusable","data-prefix","data-icon","role","viewBox","d","defaultProps","AccordionSection","p","AccordionHead","button","props","backgroundColor","color","backgroundColorHover","StyledChevron","active","AccordionBody","maxHeight","Accordion","children","title","theme","seenAllMovies","defaultActive","setActive","setHeight","content","useRef","useEffect","current","scrollHeight","finishedBarColor","primary","finishedBarColorHover","primaryHover","primaryText","ref","Director","numSeenMovies","m","key","Container","reduce","prev","cur","setMovie","Math","floor","random","Main","main","Header","header","DirectorContainer","document","body","style","background","clipPathUnits","Boolean","window","location","hostname","match","initialState","reducer","action","find","backgroundText","combineReducers","directorReducer","themeReducer","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","rootReducer","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05966cb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-square-solid.ac5db576.svg\";","module.exports = __webpack_public_path__ + \"static/media/question-square-solid.9a983e89.svg\";","const BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/';\nconst getImageUrl = (url, movieTitle, size = 'w500') =>\n\turl\n\t\t? BASE_URL_IMAGE + size + url\n\t\t: `http://placehold.it/500x750?text=${movieTitle}`;\n\n/**\n * Fetches data from url and returns JSON from response\n * @param {string} url\n */\nconst get = async url =>\n\tfetch(\n\t\t`${url}${url.includes('?') ? '&' : '?'}api_key=${\n\t\t\tprocess.env.REACT_APP_API_KEY\n\t\t}&language=en-US`\n\t).then(res => res.json());\n\nexport const getCredits = async personId =>\n\tget(`https://api.themoviedb.org/3/person/${personId}/movie_credits`);\n\nexport const getPerson = async name =>\n\tget(`https://api.themoviedb.org/3/search/person?query=${name}`);\n\n/**\n * Searches TMDb for a director and gets all the movies directed by him/her\n * @param {string} name Name of director\n * @returns {object} Object with information about director and movies directed\n */\nexport const getDirector = async name => {\n\tconst people = await getPerson(name);\n\n\tif (people.total_results === 0) throw Error('Director not found');\n\n\tconst person = people.results[0];\n\tconst credits = await getCredits(person.id);\n\tconst directedMovies = credits.crew.filter(movie => movie.job === 'Director');\n\tconst directedMoviesWithUrls = directedMovies.map(movie => ({\n\t\t...movie,\n\t\tposter_path: getImageUrl(movie.poster_path, movie.original_title),\n\t\tbackdrop_path: getImageUrl(movie.backdrop_path, movie.original_title),\n\t\tseen: false\n\t}));\n\n\tif (directedMovies.length === 0) throw Error('Director not found');\n\treturn { ...person, movies: directedMoviesWithUrls };\n};\n","import * as actionTypes from './actionTypes';\nimport * as api from '../../api';\n\nexport const directorRequest = name => dispatch => {\n\tdispatch({ type: actionTypes.DIRECTOR_REQUEST });\n\tapi\n\t\t.getDirector(name)\n\t\t.then(res => dispatch(directorAdd(res)))\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t\tdispatch(directorError(err.message));\n\t\t});\n};\n\nconst directorAdd = director => ({\n\ttype: actionTypes.DIRECTOR_ADD,\n\tpayload: director\n});\n\nconst directorError = error => ({\n\ttype: actionTypes.DIRECTOR_ERROR,\n\tpayload: error\n});\n\nexport const directorMovieToggleSeen = movieId => ({\n\ttype: actionTypes.DIRECTOR_MOVIE_TOGGLE_SEEN,\n\tpayload: movieId\n});\n","export const DIRECTOR_REQUEST = 'DIRECTOR_REQUEST';\nexport const DIRECTOR_ERROR = 'DIRECTOR_ERROR';\nexport const DIRECTOR_ADD = 'DIRECTOR_ADD';\n// const DIRECTOR_REMOVE = 'DIRECTOR_REMOVE';\nexport const DIRECTOR_MOVIE_TOGGLE_SEEN = 'DIRECTOR_TOGGLE_MOVIE_SEEN';\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { InputField, Button, Help } from '@dhis2/ui-core';\n\nimport * as directorActions from '../store/actions/director';\n\nconst Form = styled.form`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr;\n\tgrid-gap: 0.5rem;\n\talign-items: flex-start;\n\tjustify-content: center;\n\twidth: 100%;\n\tmargin: 1em 0;\n\n\t@media (min-width: 700px) {\n\t\tgrid-template-columns: 1fr auto;\n\t}\n`;\n\nconst StyledInputField = styled(InputField)`\n\twidth: 100%;\n\tmargin-top: -10px;\n`;\n\nconst StyledButton = styled(Button)``;\n\nconst H2 = styled.h2`\n\tmargin-bottom: 0;\n`;\n\nconst DirectorForm = ({ addDirector, loading, error }) => {\n\tconst [input, setInput] = useState('');\n\n\treturn (\n\t\t<>\n\t\t\t<H2>Add director</H2>\n\t\t\t<Form\n\t\t\t\tonSubmit={event => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (input !== '') {\n\t\t\t\t\t\taddDirector(input);\n\t\t\t\t\t\tsetInput('');\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<StyledInputField\n\t\t\t\t\t\terror={!!error}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tdense\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tlabel=\"Director\"\n\t\t\t\t\t\tname=\"director\"\n\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\tonChange={e => setInput(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Help error>{error}</Help>\n\t\t\t\t</div>\n\t\t\t\t<StyledButton large type=\"submit\">\n\t\t\t\t\tAdd\n\t\t\t\t</StyledButton>\n\t\t\t</Form>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = state => state.directors;\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\taddDirector: name => dispatch(directorActions.directorRequest(name))\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(DirectorForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { directorMovieToggleSeen } from '../store/actions/director';\nimport check from '../shared/assets/svg/check-square-solid.svg';\nimport question from '../shared/assets/svg/question-square-solid.svg';\n\nconst MovieContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: column;\n\talign-items: center;\n\tfont-weight: bold;\n\tfont-size: 1.1rem;\n`;\n\nconst PosterImg = styled.img`\n\twidth: 100%;\n\tborder-radius: 2px;\n\tbackground-color: grey;\n\ttransition: all 250ms ease;\n`;\n\nconst PosterImgWrapper = styled.div`\n\tcursor: pointer;\n\n\t&:hover ${PosterImg} {\n\t\tmask-repeat: no-repeat;\n\t\tmask-image: url(${question});\n\t}\n\n\t&.seen ${PosterImg} {\n\t\tmask-repeat: no-repeat;\n\t\tmask-image: url(${check});\n\t}\n\n\t&:hover:not(:focus) ${PosterImg}, &.seen ${PosterImg} {\n\t\tmask-position: center;\n\t\tfilter: grayscale(100%);\n\t}\n`;\n\nconst Title = styled.span``;\n\nconst Movie = ({\n\tmovie: { id, original_title, poster_path, seen },\n\ttoggleSeenMovie\n}) => {\n\tconsole.log(seen);\n\treturn (\n\t\t<MovieContainer>\n\t\t\t<PosterImgWrapper\n\t\t\t\tclassName={seen ? 'seen' : null}\n\t\t\t\tonClick={() => toggleSeenMovie(id)}\n\t\t\t>\n\t\t\t\t<PosterImg src={poster_path} />\n\t\t\t</PosterImgWrapper>\n\t\t\t<Title>{original_title}</Title>\n\t\t</MovieContainer>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\ttoggleSeenMovie: id => dispatch(directorMovieToggleSeen(id))\n});\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(Movie);\n","import React from 'react';\n\nconst Chevron = ({ fill, height, width, className }) => {\n\treturn (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\taria-hidden=\"true\"\n\t\t\tfocusable=\"false\"\n\t\t\tdata-prefix=\"fas\"\n\t\t\tdata-icon=\"chevron-right\"\n\t\t\trole=\"img\"\n\t\t\tviewBox=\"0 0 320 512\"\n\t\t\theight={height}\n\t\t\twidth={width}\n\t\t\tclassName={className}\n\t\t>\n\t\t\t<path\n\t\t\t\tfill={fill}\n\t\t\t\td=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n};\n\nChevron.defaultProps = {\n\tfill: 'black'\n};\n\nexport default Chevron;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Chevron from './icons/Chevron';\n\nconst AccordionSection = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst Title = styled.p`\n\tmargin: 0;\n`;\n\nconst AccordionHead = styled.button`\n\tbackground-color: ${props => props.backgroundColor};\n\tcolor: ${props => props.color};\n\tcursor: pointer;\n\tpadding: 1em;\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 1.1rem;\n\tborder: none;\n\toutline: none;\n\ttransition: background-color 0.2s ease;\n\n\t&:hover {\n\t\tbackground-color: ${props => props.backgroundColorHover};\n\t}\n`;\n\nconst StyledChevron = styled(Chevron)`\n\tmargin-left: auto;\n\ttransform: ${({ active }) => (active ? 'rotate(90deg)' : 'rotate(0)')};\n\ttransition: transform 0.25s ease;\n`;\n\nconst AccordionBody = styled.div`\n\toverflow: hidden;\n\tmax-height: ${props => props.maxHeight};\n\ttransition: max-height 0.25s ease;\n`;\n\n/**\n * Accordion based on the following article,\n * https://medium.com/skillthrive/build-a-react-accordion-component-from-scratch-using-react-hooks-a71d3d91324b.\n */\nconst Accordion = ({ children, title, theme, seenAllMovies, defaultActive }) => {\n\tconst [active, setActive] = useState(defaultActive);\n\tconst [height, setHeight] = useState('0px');\n\n\tconst content = useRef(null);\n\n\tuseEffect(() => {\n\t\tif (content.current && active) {\n\t\t\tsetHeight(`${content.current.scrollHeight}px`);\n\t\t}\n\t}, [content, active]);\n\n\tconst toggleAccordion = () => {\n\t\tsetActive(!active);\n\t\tsetHeight(!active ? `${content.current.scrollHeight}px` : '0px');\n\t};\n\n\treturn (\n\t\t<AccordionSection>\n\t\t\t<AccordionHead\n\t\t\t\tactive={active}\n\t\t\t\tbackgroundColor={seenAllMovies ? theme.finishedBarColor : theme.primary}\n\t\t\t\tbackgroundColorHover={seenAllMovies ? theme.finishedBarColorHover : theme.primaryHover}\n\t\t\t\tcolor={theme.primaryText}\n\t\t\t\tonClick={toggleAccordion}\n\t\t\t>\n\t\t\t\t<Title>{title}</Title>\n\t\t\t\t<StyledChevron active={active} width={10} fill={theme.primaryText} />\n\t\t\t</AccordionHead>\n\t\t\t<AccordionBody ref={content} maxHeight={height}>\n\t\t\t\t{children}\n\t\t\t</AccordionBody>\n\t\t</AccordionSection>\n\t);\n};\n\nAccordion.defaultProps = {\n\tdefaultActive: false\n};\n\nconst mapStateToProps = state => ({\n\ttheme: state.theme\n});\n\nexport default connect(mapStateToProps)(Accordion);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Movie from './Movie';\nimport Accordion from '../shared/components/Accordion';\n\nconst MovieContainer = styled.div`\n\tdisplay: grid;\n\tpadding: 1em;\n\tgrid-template-columns: 1fr;\n\tgrid-gap: 1rem;\n\n\t@media (min-width: 425px) {\n\t\tgrid-template-columns: repeat(2, 1fr);\n\t}\n\n\t@media (min-width: 700px) {\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t}\n\n\t@media (min-width: 1000px) {\n\t\tgrid-template-columns: repeat(4, 1fr);\n\t}\n`;\n\nconst Director = ({ director: { name, movies } }) => {\n\tconst numSeenMovies = movies.filter(m => m.seen).length;\n\treturn (\n\t\t<Accordion\n\t\t\ttitle={`${name} - ${numSeenMovies}/${movies.length} seen`}\n\t\t\tseenAllMovies={numSeenMovies === movies.length}\n\t\t>\n\t\t\t<MovieContainer>\n\t\t\t\t{movies.map(movie => (\n\t\t\t\t\t<Movie key={movie.id} movie={movie} />\n\t\t\t\t))}\n\t\t\t</MovieContainer>\n\t\t</Accordion>\n\t);\n};\n\nexport default Director;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Button } from '@dhis2/ui-core';\nimport Movie from './Movie';\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-flow: column;\n`;\n\nconst MovieContainer = styled.div`\n\twidth: 150px;\n\tmargin: 1rem auto;\n`;\n\nconst RandomMovie = ({ movies }) => {\n\tconst [movie, setMovie] = useState(null);\n\treturn (\n\t\t<Container>\n\t\t\t<h2>What movie should I see?</h2>\n\t\t\t<p>Let us help you find a movie to watch.</p>\n\t\t\t<Button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tsetMovie(movies[Math.floor(Math.random() * movies.length)])\n\t\t\t\t}\n\t\t\t>\n\t\t\t\tGet random unseen movie\n\t\t\t</Button>\n\n\t\t\t<MovieContainer>{movie && <Movie movie={movie} />}</MovieContainer>\n\t\t</Container>\n\t);\n};\n\nconst mapStateToProps = state => ({\n\tmovies: state.directors.results.reduce(\n\t\t(prev, cur) => [...prev, ...cur.movies.filter(movie => !movie.seen)],\n\t\t[]\n\t)\n});\n\nexport default connect(mapStateToProps)(RandomMovie);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport DirectorForm from './DirectorForm';\nimport Director from './Director';\nimport RandomMovie from './RandomMovie';\n\nconst Main = styled.main`\n\tpadding: 1em;\n\n\t@media (min-width: 1000px) {\n\t\twidth: 1000px;\n\t\tmargin: 0 auto;\n\t}\n`;\n\nconst Header = styled.header`\n\tbackground-color: ${props => props.backgroundColor};\n\tcolor: ${props => props.color};\n\theight: 3rem;\n\tpadding: 0 1rem;\n\tfont-size: 1.25rem;\n\tdisplay: flex;\n\tflex-flow: row;\n\tjustify-content: center;\n\talign-items: center;\n\n\t@media (min-width: 700px) {\n\t\tjustify-content: space-between;\n\t}\n`;\n\nconst DirectorContainer = styled.div`\n\tdisplay: grid;\n\tgrid-gap: 0.1rem;\n`;\n\nconst App = ({ theme, directors }) => {\n\tuseEffect(() => {\n\t\tdocument.body.style.backgroundColor = theme.background;\n\t}, [theme]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header backgroundColor={theme.primary} color={theme.primaryText}>\n\t\t\t\t<span>Director Movie List</span>\n\t\t\t</Header>\n\t\t\t<Main>\n\t\t\t\t<DirectorForm />\n\t\t\t\t<RandomMovie />\n\t\t\t\t<h2>Directors</h2>\n\t\t\t\t<DirectorContainer>\n\t\t\t\t\t{directors.length === 0\n\t\t\t\t\t\t? 'You have no favourite directors. Add one in the input above.'\n\t\t\t\t\t\t: directors.map(director => (\n\t\t\t\t\t\t\t\t<Director key={director.id} director={director} />\n\t\t\t\t\t\t  ))}\n\t\t\t\t</DirectorContainer>\n\t\t\t</Main>\n\t\t\t<svg width=\"0\" height=\"0\">\n\t\t\t\t<defs>\n\t\t\t\t\t<clipPath id=\"checkPath\" clipPathUnits=\"objectBoundingBox\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\td=\"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</clipPath>\n\t\t\t\t</defs>\n\t\t\t</svg>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = state => ({\n\tdirectors: state.directors.results,\n\ttheme: state.theme\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = { error: '', loading: false, results: [] };\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.DIRECTOR_REQUEST:\n\t\t\treturn { ...state, loading: true, error: '' };\n\t\tcase actionTypes.DIRECTOR_ERROR:\n\t\t\treturn { ...state, loading: false, error: action.payload };\n\t\tcase actionTypes.DIRECTOR_ADD:\n\t\t\treturn state.results.find(director => director.id === action.payload.id)\n\t\t\t\t? { ...state, error: 'Director already exists', loading: false }\n\t\t\t\t: {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tresults: [action.payload, ...state.results],\n\t\t\t\t\t\tloading: false\n\t\t\t\t  };\n\t\tcase actionTypes.DIRECTOR_MOVIE_TOGGLE_SEEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: state.results.map(({ movies, ...rest }) => ({\n\t\t\t\t\t...rest,\n\t\t\t\t\tmovies: movies.map(movie =>\n\t\t\t\t\t\tmovie.id === action.payload\n\t\t\t\t\t\t\t? { ...movie, seen: !movie.seen }\n\t\t\t\t\t\t\t: movie\n\t\t\t\t\t)\n\t\t\t\t}))\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","const createTheme = (\n\tprimary,\n\tprimaryHover,\n\tprimaryText,\n\tbackground,\n\tbackgroundText,\n\tfinishedBarColor,\n\tfinishedBarColorHover,\n) => ({\n\tprimary,\n\tprimaryHover,\n\tprimaryText,\n\tbackground,\n\tbackgroundText,\n\tfinishedBarColor,\n\tfinishedBarColorHover\n});\n\n// const blue = createTheme('#2291e6', '#2476b5', '#ffffff', '#ffffff', '#000000');\nconst red = createTheme('#F93943', '#CC353C', '#ffffff', '#ffffff', '#000000','#00A86B','#007000');\n// const darkMode = createTheme(\n// \t'#262626',\n// \t'#363636',\n// \t'#ffffff',\n// \t'#4a4a4a',\n// \t'#ffffff'\n// );\n\nconst initialState = red;\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport directorReducer from './director';\nimport themeReducer from './theme';\n\nconst reducer = combineReducers({\n\tdirectors: directorReducer,\n\ttheme: themeReducer\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n\tkey: 'directormovielist',\n\tstorage: storage,\n\tstateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === `development`) {\n\tconst { logger } = require(`redux-logger`);\n\n\tmiddlewares.push(logger);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n\tpReducer,\n\tcomposeEnhancers(applyMiddleware(...middlewares))\n);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store, persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate persistor={persistor} loading={<h2>Loading</h2>}>\n\t\t\t<App />\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}